{#
    Displays title and search form
#}
{% macro renderTitleAndSearch(pageTitle, buttons) %}
    <div class="container-fluid search-header clearfix">
        <h1>
            <span class="pull-left">
                {{ pageTitle|trans }}
            </span>
            <form class="form-inline search-form configuration-search-form">
                <input type="text" id="search" class="span2 search" name="search" value="Find an Option">
                <button type="submit" class="btn btn-search btn-primary">{{ 'Find'|trans }}</button>
            </form>
            <div class="pull-right">
                {% if buttons is defined %}
                    {% for button in buttons %}
                        {{ button }}
                    {% endfor %}
                {% endif %}
            </div>
        </h1>

    </div>
{% endmacro %}

{#
    Render page scrollable data
    params:
        data      - array of horizontal tabs
        activeTab - active tab name
#}
{%  macro renderScrollData(data, activeTab = '') %}
    {% import _self as __ %}
    <div class="tabbable system-configuration-container">
        <div class="container-fluid">
            <ul class="nav nav-tabs">
                {% if data is iterable %}
                    {% for tab in data %}
                        {% if (activeTab != '' and activeTab == tab.name) or (activeTab == '' and loop.first) %}
                            {% set tab = tab|merge({ isActive: true }) %}
                        {% endif %}
                        {{ __.renderTabNavItem(tab) }}
                    {% endfor %}
                {% endif %}
            </ul>
        </div>
        <div class="scrollable-container">
            <div class="tab-content container-fluid">
                {% if data is iterable %}
                    {% for tab in data %}
                        {% if (activeTab != '' and activeTab == tab.name) or (activeTab == '' and loop.first) %}
                            {% set tab = tab|merge({ isActive: true }) %}
                        {% endif %}
                        {{ __.renderHorizontalTabContent(tab) }}
                    {% endfor %}
                {% endif %}
            </div>
        </div>
    </div>
{% endmacro %}

{#
    Renders tab navigation item
    params:
        data.isActive    - Tab is active
        data.name        - Tab name
        data.label       - Tab label
        data.icon        - Tab icon
#}
{% macro renderTabNavItem(data) %}
    <li {% if data.isActive is defined and data.isActive %}class="active"{% endif %}>
        <a href="#{{ data.name }}" data-toggle="tab">
            {% if data.icon is defined and data.icon != '' %}<i class="icon {{ data.icon }}"></i>{% endif %}
            {{ data.label|trans }}
        </a>
    </li>
{% endmacro %}

{#
    Renders horizontal tab content
    params:
        data.isActive    - Tab is active
        data.name        - Tab name
        data.current     - Current open tab data content(raw html)
#}
{% macro renderHorizontalTabContent(data) %}
    {% import _self as __ %}
    <div class="tab-pane usser-row{% if data.isActive is defined and data.isActive %} active{% endif %}" id="{{ data.name }}">
        <div class="row-fluid row-fluid-divider">
            {{ __.renderVerticalSubmenu(data) }}

            {% if data.current is defined %}
                {{ __.renderCurrentTab(data.current) }}
            {% endif %}
        </div>
    </div>
{% endmacro %}

{#
    Renders submenu
    params:
        data.children             - Submenu groups
        data.children[].label     - Group label
        data.children[].children  - Vertical menu items
#}
{% macro renderVerticalSubmenu(data, activeTab = '') %}
    {% import _self as __ %}
    <div class="span2 system-configuration-sidebar">
        {% if data.children is defined and data.children is iterable %}
            {% for group in data.children %}
                <dl>
                    <dt>
                        <h4>{{ group.label|trans }}</h4>
                    </dt>
                    <dd>
                        {% if group.children is defined and group.children is iterable %}
                            <ul class="nav nav-pills nav-stacked">
                                {% for tab in group.children %}
                                    {% if (activeTab != '' and activeTab == tab.name) or (activeTab == '' and loop.first) %}
                                        {% set tab = tab|merge({ isActive: true }) %}
                                        {% set activeTab = tab.name %}
                                    {% endif %}
                                    {{ __.renderTabNavItem(tab) }}
                                {% endfor %}
                            </ul>
                        {% endif %}
                    </dd>
                </dl>
            {% endfor %}
        {% endif %}
    </div>
{% endmacro %}

{#
    Renders inner tab content
    params:
        data.label       - tab title
        data.description - tab description
        data.children    - fieldsets array
#}
{% macro renderCurrentTab(data) %}
    {% import _self as __ %}
    <div class="span10 form-container">
        <h2 class="oro-subtitle">{{ data.label|trans }}</h2>
        {% if data.description is defined %}
            <p>{{ data.description }}</p>
        {% endif %}

        {% if data.children is defined and data.children is iterable %}
            {% for fieldset in data.children %}
                {{ __.renderFiedset(fieldset) }}
            {% endfor %}
        {% endif %}
    </div>
{% endmacro %}

{#
    Renders fieldset
    params:
        data.label       - fieldset label
        data.description - fieldset description
        data.children    - fields array
#}
{% macro renderFiedset(data) %}
    {% import _self as __ %}
    <fieldset class="form-horizontal">
        <h5 class="usser-fiedset">
            <span>{{ data.label|trans }}</span>
        </h5>

        {% if data.description is defined %}
            <p>{{ data.description }}</p>
        {% endif %}

        {% if data.children is defined and data.children is iterable %}
            {% for field in data.children %}
                {{ __.renderField(field) }}
            {% endfor %}
        {% endif %}
    </fieldset>
{% endmacro %}

{#
    Render field
    params:
        field - raw html|formView object
#}
{% macro renderField(field) %}
    {# determine that this is formView or not #}
    {% if field.vars is defined %}
        {{ form_row(field) }}
    {% else %}
        {{ field|raw }}
    {% endif %}
{% endmacro %}
